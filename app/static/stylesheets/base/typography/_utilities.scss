////
/// All variable, function, and mixin declarations for typography live here.
/// @group typography, @group utilities
////

///
/// Variable: font weights
/// Syntax: $fw-[weight]

$fw-light: 300;
$fw-regular: 400;


$font-family-data: (
  'default': unquote("-apple-system, 'BlinkMacSystemFont', 'San Francisco', 'Segoe UI', 'Roboto', 'Helvetica Neue', sans-serif"),
  'body': unquote("'Roboto', 'Helvetica Neue', sans-serif"),
  'heading': unquote("'Roboto Condensed', 'Roboto', 'Helvetica Neue', sans-serif"),
  'title': unquote("'Komu', 'Roboto Condensed', 'Roboto', sans-serif")
);

///
/// Returns a font-family declaration given the associated name.
/// @param {String} $variant [default] - the family name. Defaults to 'default'.
/// @returns {String} - the desired font family declaration.

@function ff($variant: 'default') {
  @return retrieve-map-value($font-family-data, "font-family data", $variant);
}


$line-height-data: (
  'tighter': 1,
  'tight': 1.25,
  'base': 1.5,
  'loose': 1.75,
  'looser': 2,
);

///
/// Returns a line-height given the associated name.
/// @param {String} $variant [base] - the variant name. Defaults to 'base'.
/// @returns {Number} - the desired line-height.

@function lh($variant: 'base') {
  @return retrieve-map-value($line-height-data, "line-height data", $variant);
}


///
/// Default text styles for smaller text

@mixin type-smallcaps {
  font-size: 0.75rem;
  font-weight: 500;
  line-height: lh();
  text-transform: uppercase;
}

///
/// Default body typography styles

@mixin type-body {
  font-size: 1rem;
  line-height: lh('loose');
}

///
/// Default heading styles

@mixin type-heading {
  font-size: 1.25rem;
  line-height: lh('tight');
  text-align: center;
  text-transform: uppercase;
}

///
/// Default title styles

@mixin type-title {
  padding: 0;
  font-size: 1.5rem;
  line-height: lh(tighter);
}

///
///

@mixin type-medium {
  margin: 0;
  font-size: 1rem;
}


@mixin type-heading {
  font-size: 1.5rem;
  font-family: ff('heading');
  line-height: lh(tighter);
}
