# Generated by Django 2.0.7 on 2018-07-18 20:32

import uuid

import django.db.models.deletion
import enumfields
from django.conf import settings
from django.db import migrations, models

import app
from app.models import PlayerRole


def add_participant_to_players(apps, schema_editor):
    User = apps.get_model('app', 'User')
    Participant = apps.get_model('app', 'Participant')
    Player = apps.get_model('app', 'Player')
    Spectator = apps.get_model('app', 'Spectator')
    Moderator = apps.get_model('app', 'Moderator')

    for p in Player.objects.all():
        participant = Participant.objects.create(
            id=p.id,
            user=p.user,
            game=p.game,
            active=p.active,
            created_at=p.created_at,
            modified_at=p.modified_at
        )
        participant.save()

        if p.role == PlayerRole.SPECTATOR:
            spectator = Spectator.objects.create(
                id=p.id,
                user=p.user,
                game=p.game,
                active=p.active,
                created_at=p.created_at,
                modified_at=p.modified_at
            )
            spectator.save()
            p.delete()
        else:
            p.participant = participant
            p.save()


def convert_mods(apps, schema_editor):
    User = apps.get_model('app', 'User')
    Participant = apps.get_model('app', 'Participant')
    Player = apps.get_model('app', 'Player')
    Moderator = apps.get_model('app', 'Moderator')

    for user in User.objects.filter(groups__name='Moderators'):
        p = Player.objects.get(user=user)
        parent = p.participant
        mod = Moderator.objects.create(
            id=p.id,
            user=p.user,
            game=p.game,
            active=p.active,
            created_at=p.created_at,
            modified_at=p.modified_at
        )
        mod.save()
        p.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0013_auto_20180711_0838'),
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Participant')),
            ],
            bases=('app.participant',),
        ),
        migrations.CreateModel(
            name='Spectator',
            fields=[
                ('participant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Participant')),
            ],
            bases=('app.participant',),
        ),
        migrations.AddField(
            model_name='participant',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game'),
        ),
        migrations.AddField(
            model_name='participant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='player',
            name='participant',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='app.Participant'),
        ),
        migrations.RunPython(
            code=add_participant_to_players,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RunPython(
            code=convert_mods,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RemoveField(
            model_name='player',
            name='active',
        ),
        migrations.RemoveField(
            model_name='player',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='player',
            name='game',
        ),
        migrations.RemoveField(
            model_name='player',
            name='id',
        ),
        migrations.RemoveField(
            model_name='player',
            name='modified_at',
        ),
        migrations.RemoveField(
            model_name='player',
            name='user',
        ),
        migrations.AlterField(
            model_name='player',
            name='participant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Participant'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='initiator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiator_tags', to='app.Player', to_field='participant'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_tags', to='app.Player', to_field='participant'),
        ),
        migrations.AlterField(
            model_name='supplycode',
            name='claimed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Player', to_field='participant'),
        ),
        migrations.AlterModelOptions(
            name='participant',
            options={'base_manager_name': 'objects'},
        ),
        migrations.RemoveField(
            model_name='signupinvite',
            name='player_role',
        ),
        migrations.AddField(
            model_name='signupinvite',
            name='participant_role',
            field=enumfields.fields.EnumField(blank=True, enum=app.models.participant.ParticipantRole, max_length=1,
                                              null=True),
        ),
    ]
