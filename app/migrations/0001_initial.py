# Generated by Django 2.2.8 on 2023-03-05 15:31

import app.models.email
import app.models.modifier
import app.models.participant
import app.models.player
import app.models.tag
import app.models.user
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Last name')),
                ('email', models.EmailField(error_messages={'unique': 'An account with that email address already exists.'}, help_text='Please enter a valid email address.', max_length=254, unique=True, verbose_name='Email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Deselect this instead of deleting accounts.', verbose_name='Active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', app.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('started_on', models.DateTimeField(blank=True, null=True)),
                ('ended_on', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('include_summary', models.BooleanField(default=False, null=True)),
                ('ended_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ended_games', to=settings.AUTH_USER_MODEL)),
                ('started_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='started_games', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=9)),
                ('role', enumfields.fields.EnumField(enum=app.models.player.PlayerRole, max_length=1)),
                ('in_oz_pool', models.BooleanField(default=False)),
                ('is_oz', models.BooleanField(default=False, null=True)),
                ('is_score_public', models.BooleanField(blank=True, default=False, null=True)),
                ('point_modifier', models.IntegerField(default=0)),
                ('faction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.Faction')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tagged_at', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('type', enumfields.fields.EnumField(default='S', enum=app.models.tag.TagType, max_length=1)),
                ('active', models.BooleanField(default=True)),
                ('point_modifier', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiator_tags', to='app.Player')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_tags', to='app.Player')),
            ],
        ),
        migrations.CreateModel(
            name='SupplyCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=6, unique=True)),
                ('value', models.IntegerField()),
                ('point_modifier', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('claimed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('claimed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Spectator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignupLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('mon_hours', models.CharField(blank=True, max_length=15, null=True)),
                ('tues_hours', models.CharField(blank=True, max_length=15, null=True)),
                ('wed_hours', models.CharField(blank=True, max_length=15, null=True)),
                ('thurs_hours', models.CharField(blank=True, max_length=15, null=True)),
                ('fri_hours', models.CharField(blank=True, max_length=15, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Game')),
            ],
        ),
        migrations.CreateModel(
            name='SignupInvite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('participant_role', enumfields.fields.EnumField(blank=True, enum=app.models.participant.ParticipantRole, max_length=1, null=True)),
                ('used_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game')),
                ('signup_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.SignupLocation')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cost', models.IntegerField()),
                ('details', models.CharField(blank=True, max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buyer_name', to='app.Player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Modifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('modifier_type', enumfields.fields.EnumField(enum=app.models.modifier.ModifierType, max_length=1)),
                ('modifier_amount', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('faction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Faction')),
            ],
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('character_name', models.CharField(blank=True, max_length=180, null=True, verbose_name='Character name')),
                ('score', models.CharField(blank=True, max_length=180, null=True, verbose_name="Moderator 'score'. Can include letters.")),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Legacy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.IntegerField()),
                ('details', models.CharField(max_length=50)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_legacy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='faction',
            name='game',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app.Game'),
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('data', models.TextField(blank=True)),
                ('group', enumfields.fields.EnumField(enum=app.models.email.RecipientGroup, max_length=1)),
                ('player_made', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=True)),
                ('target_player_code', models.CharField(default='', max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Game')),
            ],
        ),
    ]
