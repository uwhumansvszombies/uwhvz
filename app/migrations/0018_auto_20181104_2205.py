# Generated by Django 2.1.3 on 2018-11-04 22:05

import uuid

import django.db.models.deletion
import enumfields.fields
from django.conf import settings
from django.db import migrations, models

import app.models.participant
from app.models import PlayerRole


def convert_spectators(apps, schema_editor):
    Player = apps.get_model('app', 'Player')
    Spectator = apps.get_model('app', 'Spectator')

    for s in Player.objects.filter(role=PlayerRole.SPECTATOR):
        spectator = Spectator.objects.create(
            id=s.id,
            user=s.user,
            game=s.game,
            active=s.active,
            created_at=s.created_at,
            modified_at=s.modified_at)
        spectator.save()
        s.delete()


def convert_mods(apps, schema_editor):
    User = apps.get_model('app', 'User')
    Game = apps.get_model('app', 'Game')
    Player = apps.get_model('app', 'Player')
    Moderator = apps.get_model('app', 'Moderator')

    game = Game.objects.order_by('created_at').first()

    for mod_user in User.objects.filter(groups__name='Moderators'):
        m = Player.objects.filter(user=mod_user, game=game, active=True).get()
        mod = Moderator.objects.create(
            id=m.id,
            user=m.user,
            game=m.game,
            active=m.active,
            created_at=m.created_at,
            modified_at=m.modified_at)
        mod.save()
        m.delete()


class Migration(migrations.Migration):
    dependencies = [
        ('app', '0017_auto_20181029_1311'),
    ]

    operations = [
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('character_name',
                 models.CharField(blank=True, max_length=180, null=True, verbose_name='Character name')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Spectator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(
            code=convert_mods,
            reverse_code=django.db.migrations.operations.special.RunPython.noop
        ),
        migrations.RunPython(
            code=convert_spectators,
            reverse_code=django.db.migrations.operations.special.RunPython.noop
        ),
        migrations.RemoveField(
            model_name='signupinvite',
            name='player_role',
        ),
        migrations.AddField(
            model_name='signupinvite',
            name='participant_role',
            field=enumfields.fields.EnumField(blank=True, enum=app.models.participant.ParticipantRole, max_length=1,
                                              null=True),
        ),
    ]
